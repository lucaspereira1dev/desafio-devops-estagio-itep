# Define o contexto para eventos de I/O.
events {}

# Define o contexto para as diretivas HTTP.
http {
    # Define um servidor virtual.
    server {
        # O Nginx escutará na porta 80.
        listen 80;

        # Rota para a raiz (/)
        location / {
            # Retorna um HTML simples como página de boas-vindas
            return 200 '
            <html>
                <head><title>Bem-vindo!</title></head>
                <body style="font-family: sans-serif; text-align: center;">
                    <h1>Página Principal do Reverse Proxy</h1>
                    <p>Acesse as aplicações abaixo:</p>
                    <ul>
                        <li><a href="/app1/">Aplicação 1</a></li>
                        <li><a href="/app2/">Aplicação 2</a></li>
                    </ul>
                </body>
            </html>';
            add_header Content-Type text/html;
        }

        # Rota para /app1
        # Quando uma requisição chegar em http://localhost/app1/...
        location /app1/ {
            # O Nginx vai repassá-la para o container 'app1' na porta 3031.
            # O Docker Compose garante que o nome 'app1' seja resolvido para o IP correto.
            proxy_pass http://app1:3031/;
        }

        # Rota para /app2
        # Quando uma requisição chegar em http://localhost/app2/...
        location /app2/ {
            proxy_pass http://app2:3032/;
        }
    }
}